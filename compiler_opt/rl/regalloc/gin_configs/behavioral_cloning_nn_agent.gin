import gin.tf.external_configurables
import compiler_opt.rl.gin_external_configurables
import compiler_opt.rl.regalloc.config
import tf_agents.agents.behavioral_cloning.behavioral_cloning_agent
import tf_agents.networks.actor_distribution_network

train_eval.get_signature_spec_fn=@config.get_regalloc_signature_spec
train_eval.agent_name='behavioral_cloning'
train_eval.num_iterations=200000
train_eval.batch_size=64
train_eval.train_sequence_length=1

get_observation_processing_layer_creator.quantile_file_dir='compiler_opt/rl/regalloc/vocab'
get_observation_processing_layer_creator.with_z_score_normalization = False

create_agent.policy_network = @actor_distribution_network.ActorDistributionNetwork

ActorDistributionNetwork.preprocessing_combiner=@tf.keras.layers.Concatenate()
ActorDistributionNetwork.fc_layer_params=(80, 40)
ActorDistributionNetwork.dropout_layer_params=(0.2, 0.2)
ActorDistributionNetwork.activation_fn=@tf.keras.activations.relu
NormalProjectionNetwork.mean_transform=None

tf.train.AdamOptimizer.learning_rate = 0.001
tf.train.AdamOptimizer.epsilon = 0.0003125

BehavioralCloningAgent.optimizer = @tf.train.AdamOptimizer()
BehavioralCloningAgent.epsilon_greedy = 0.1
BehavioralCloningAgent.gradient_clipping = None
BehavioralCloningAgent.debug_summaries = True
BehavioralCloningAgent.summarize_grads_and_vars = True
